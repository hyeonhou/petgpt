<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mc.app.repository.ItemRepository">
    <select id="select" resultType="item">
        SELECT * FROM item
    </select>
    <select id="selectOne" parameterType="Integer" resultType="item">
        SELECT * FROM item WHERE item_key=#{itemKey}
    </select>
    <select id="findByCategory" parameterType="Integer" resultType="item">
        SELECT * FROM item WHERE category_key=#{categoryKey}
    </select>
    <select id="findByItemKeys" resultType="item">
        SELECT * FROM item 
        WHERE item_key IN 
        <foreach item="itemKey" collection="itemKeys" open="(" separator="," close=")">
            #{itemKey}
        </foreach>
    </select>
    <select id="findByPriceRange" resultType="item">
        SELECT * FROM item 
        WHERE item_price BETWEEN #{minPrice} AND #{maxPrice}
    </select>
    <select id="findByPriceGreaterThan" resultType="item">
        SELECT * FROM item 
        WHERE item_price >= #{minPrice}
    </select>
    
    <select id="selectWithOrder" resultType="item">
        SELECT * FROM item
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <select id="findByCategoryWithOrder" resultType="item">
        SELECT * FROM item 
        WHERE category_key=#{categoryKey}
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <select id="findByItemKeysWithOrder" resultType="item">
        SELECT * FROM item 
        WHERE item_key IN 
        <foreach item="itemKey" collection="itemKeys" open="(" separator="," close=")">
            #{itemKey}
        </foreach>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <select id="findByPriceRangeWithOrder" resultType="item">
        SELECT * FROM item 
        WHERE item_price BETWEEN #{minPrice} AND #{maxPrice}
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <select id="findByPriceGreaterThanWithOrder" resultType="item">
        SELECT * FROM item 
        WHERE item_price >= #{minPrice}
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <select id="findByNameContaining" resultType="item">
        SELECT * FROM item 
        WHERE item_name LIKE CONCAT('%', #{keyword}, '%')
    </select>
    
    <select id="findByNameContainingWithOrder" resultType="item">
        SELECT * FROM item 
        WHERE item_name LIKE CONCAT('%', #{keyword}, '%')
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
    </select>
    
    <insert id="insert" parameterType="item">
        INSERT INTO item VALUES (null, #{categoryKey}, #{itemName}, #{itemContent},
                                 #{itemPrice}, #{itemSprice}, #{itemCount}, now(),
                                 #{itemImg1}, #{itemImg2}, #{itemImg3})
    </insert>
    <update id="update" parameterType="item">
        UPDATE item SET
                        category_key=#{categoryKey},
                        item_name=#{itemName},
                        item_content=#{itemContent},
                        item_price=#{itemPrice},
                        item_sprice=#{itemSprice},
                        item_count=#{itemCount},
                        item_img1=#{itemImg1},
                        item_img2=#{itemImg2},
                        item_img3=#{itemImg3}
        WHERE item_key=#{itemKey}
    </update>
    <delete id="delete" parameterType="Integer">
        DELETE FROM item WHERE item_key=#{itemKey}
    </delete>

    <!-- 홈 화면 필터링을 위한 쿼리 추가 -->
    <select id="selectWithOrderAndLimit" resultType="item">
        SELECT i.*,
               CASE
                   WHEN i.item_price > 0 AND i.item_sprice > 0 AND i.item_sprice &lt; i.item_price
                   THEN ((i.item_price - i.item_sprice) / i.item_price) * 100
                   ELSE 0
               END AS discount_rate
        FROM item i
        <if test="orderBy != null and orderBy != ''">
            ORDER BY ${orderBy}
        </if>
        <if test="orderBy == null or orderBy == ''">
            ORDER BY i.item_key ASC
        </if>
        LIMIT #{limit}
    </select>

    <!-- 베스트셀러 조회를 위한 새로운 쿼리 (total_order 집계) -->
    <select id="selectBestSellingItemsFromOrders" resultType="item">
        SELECT i.*, COUNT(o.order_key) as sales_count <!-- 판매량 집계 -->
        FROM item i
        JOIN total_order o ON i.item_key = o.item_key
        WHERE o.order_status = #{orderStatus} <!-- 완료된 주문만 필터링 -->
        GROUP BY i.item_key <!-- 상품별로 그룹화 -->
        ORDER BY sales_count DESC <!-- 집계된 판매량으로 정렬 -->
        LIMIT #{limit} <!-- 개수 제한 -->
    </select>

</mapper>