<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mc.app.repository.CommentsRepository">

    <select id="findAllByPboard" parameterType="map" resultType="com.mc.app.dto.Comments">
        SELECT
            c.comments_key,
            c.pboard_key,
            c.cust_id, 
            c.comments_content,
            c.comments_rdate,
            c.comments_update,
            c.parent_comment_key,
            c.depth,
            cu.cust_id AS custId, 
            cu.cust_img AS custProfileImgUrl, 
            pc.cust_id AS parentCustId,

            (SELECT 
                COUNT(*) 
            FROM 
                comment_likes cl 
            WHERE 
                cl.comments_key = c.comments_key) 
            AS likeCount, -- 좋아요 수 계산

            (CASE WHEN EXISTS
            (SELECT 
                1 
            FROM 
                comment_likes cl 
            WHERE cl.comments_key = c.comments_key AND cl.cust_id = #{currentCustId})

            THEN 1 ELSE 0 END) 
            AS likedByCurrentUser -- 현재 사용자 좋아요 여부 계산

        FROM
            comments c
        LEFT JOIN -- 댓글 작성자가 탈퇴했을 수도 있으니 LEFT JOIN 고려
            customer cu ON c.cust_id = cu.cust_id 
        LEFT JOIN
            comments pc ON c.parent_comment_key = pc.comments_key
        WHERE
            c.pboard_key = #{pboardKey}
        ORDER BY
            COALESCE(c.parent_comment_key, c.comments_key), c.comments_rdate
    </select>

    <select id="findById" parameterType="int" resultType="com.mc.app.dto.Comments">
        SELECT * FROM comments WHERE comments_key = #{commentsKey}
    </select>

    <insert id="insert" parameterType="com.mc.app.dto.Comments" useGeneratedKeys="true" keyProperty="commentsKey">
        INSERT INTO comments (
            pboard_key, 
            cust_id, 
            comments_content, 
            comments_rdate, 
            comments_update, 
            parent_comment_key, 
            depth
        ) 
        VALUES (
            #{pboardKey}, 
            #{custId}, 
            #{commentsContent}, 
            #{commentsRdate}, 
            #{commentsUpdate}, 
            #{parentCommentKey}, 
            #{depth}
        )
    </insert>

    <update id="update" parameterType="com.mc.app.dto.Comments">
        UPDATE comments SET
                            comments_content = #{commentsContent},
                            comments_update = #{commentsUpdate}
        WHERE comments_key = #{commentsKey}
    </update>

    <delete id="delete" parameterType="int">
        DELETE FROM comments WHERE comments_key = #{commentsKey}
    </delete>

</mapper>
